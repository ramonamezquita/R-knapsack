% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knapsack_dynamic.R
\name{suboptimal_knapsack_dynamic}
\alias{suboptimal_knapsack_dynamic}
\title{0-1 Knapsack Problem Solver (Dynamic sub-optimal)}
\usage{
suboptimal_knapsack_dynamic(x, W)
}
\arguments{
\item{x}{A data frame with two columns: \code{w} (weights) and \code{v} (values) of the items.}

\item{W}{The total capacity of the knapsack.}
}
\value{
The maximum total value that can be obtained.
}
\description{
0-1 Knapsack Problem Solver (Dynamic sub-optimal)
}
\details{
This is not the most optimal dynamic programming version of the knapsack problem.
In an optimal solution, once we have selected a fixed number of items, there
is no need to recompute for all possible weights, as the number of items and
the chosen items are already fixed.
A more efficient dynamic programming approach would eliminate unnecessary
computations, focusing only on the possible states directly relevant to the
final solution.
}
\references{
https://en.wikipedia.org/wiki/Knapsack_problem#0.2F1_knapsack_problem
}

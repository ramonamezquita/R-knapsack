% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brute_force_knapsack.R
\name{brute_force_knapsack}
\alias{brute_force_knapsack}
\title{Brute-force Knapsack Problem Solver}
\usage{
brute_force_knapsack(x, W, parallel = FALSE)
}
\arguments{
\item{x}{A data frame with two columns:
- `w`: Weights of the items.
- `v`: Values of the items.}

\item{W}{A numeric value representing the maximum weight capacity of the knapsack.}

\item{parallel}{If True, runs in parallel using the available cores.}
}
\value{
A list with two elements:
  - `value`: The maximum value achievable without exceeding the weight limit.
  - `elements`: The indices of the items selected for the optimal solution.
}
\description{
This function solves the knapsack problem using a brute-force approach.
It checks all possible combinations of elements to determine the one that
maximizes the total value without exceeding the maximum weight capacity.
}
\details{
The function uses a brute-force method to solve the knapsack problem by checking
all possible subsets of items. For each subset, it calculates the total weight
and value, and if the weight is within the limit and the value is higher than the
previously found solutions, it updates the best solution.
}
\examples{
# Example usage:
items <- data.frame(w = c(2, 3, 4, 5), v = c(3, 4, 5, 6))
W <- 5
brute_force_knapsack(items, W)

}
